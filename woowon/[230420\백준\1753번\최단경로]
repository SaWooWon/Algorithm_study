import sys
import heapq

input = sys.stdin.readline
INF = sys.maxsize

V, E = map(int, input().split())
K = int(input())

distance = [INF] * (V+1)
graph = [[] for _ in range(V+1)]
pq = []

for i in range(E):
    u, v, w = map(int, input().split())
    graph[u].append((w, v))

heapq.heappush(pq, (0, K))
distance[K] = 0

while pq:
    w, current = heapq.heappop(pq)
    for weight, next_node in graph[current]:
        if distance[next_node] > weight + w:
            distance[next_node] = weight + w
            heapq.heappush(pq, (weight + w, next_node))
        
for i in range(1, V+1):
    print("INF" if distance[i] == INF else distance[i]) 
